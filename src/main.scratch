(include "include/linspalg/src/linspalg.scratch")

(macro samples-per-pixel 10)
(macro vfov 30)
(macro gamma 2.2)
(macro cam.x 0)
(macro cam.y 0)
(macro cam.z 0)
(macro SKY-COLOR (Vec3 0.5 0.7 1.0))
(macro NEAR-PLANE 0.001)
(macro MAX-DEPTH 10)

(macro ray.pos (Vec3 ray.x ray.y ray.z))
(macro ray.dir (Vec3 ray.dx ray.dy ray.dz))
(macro hit.color (Vec3 hit.color.r hit.color.g hit.color.b))
(macro hit.pos (Vec3 hit.x hit.y hit.z))
(macro hit.normal (Vec3 hit.dx hit.dy hit.dz))
(macro scattered.dir (Vec3 scattered.dx scattered.dy scattered.dz))
(macro scattered.color (Vec3 scattered.r scattered.g scattered.b))

(macro (set-hit-index i)
       (when (= true did-hit)
         (:= t-max hit.t)
         (:= hit-index ,i)))

(include "src/basic-macros.scratch")
(include "src/color.scratch")
(include "src/shapes/sphere.scratch")
(include "src/materials/lambertian.scratch")
(include "src/materials/metal.scratch")

(sprite "Stage"
  (costumes "backdrop" "assets/blank.png"))

(sprite "main"
  (costumes "blank" "assets/blank.png")

  (variables half-screen-width half-screen-height
             t-min t-max
             did-hit hit.t
             hit.color.r hit.color.g hit.color.b
             hit.x hit.y hit.z hit.dx hit.dy hit.dz
             scattered.dx scattered.dy scattered.dz
             scattered.r scattered.g scattered.b)

  (proc (when-flag-clicked)
    (set-xy "-Infinity" "Infinity")
    (:= half-screen-width (- x-pos))
    (:= half-screen-height y-pos)
    (set-pen-size 1)
    (render))

  (proc (render)
    (variables pixel.r pixel.g pixel.b)
    (repeat (+ 1 (* 2 half-screen-height))
      (pen-down)
      (repeat (* 2 half-screen-width)
        (v3-store pixel.r pixel.g pixel.b (Vec3 0 0 0))
        (repeat samples-per-pixel
          (trace
            cam.x cam.y cam.z
            (* (tan vfov) (/ (+ x-pos (random -0.5 0.5)) half-screen-height))
            (* (tan vfov) (/ (+ y-pos (random -0.5 0.5)) half-screen-height))
            1)
          (+= pixel.r hit.color.r)
          (+= pixel.g hit.color.g)
          (+= pixel.b hit.color.b))
        (v3-use gamma-correct (v3-scale (/ 1 samples-per-pixel)
                                        (Vec3 pixel.r pixel.g pixel.b)))
        (change-x 1))
      (pen-up)
      (set-x "-Infinity")
      (change-y -1)))

  (proc (trace ray.x ray.y ray.z ray.dx ray.dy ray.dz)
    (variables r g b x y z dx dy dz hit-index)
    (v3-store r g b (Vec3 1 1 1))
    (v3-store x y z ray.pos)
    (v3-store dx dy dz ray.dir)
    (:= t-min NEAR-PLANE)
    (repeat MAX-DEPTH
      (:= t-max "Infinity")
      (:= hit-index 0)
      (hit-sphere x y z dx dy dz 0 0 5 1)
      (set-hit-index 1)
      (hit-sphere x y z dx dy dz -2 -0.25 4 0.75)
      (set-hit-index 2)
      (hit-sphere x y z dx dy dz 2 -0.25 4 0.75)
      (set-hit-index 3)
      (cond
        (= hit-index 1) (scatter-lambertian 0.05 1 0.05)
        (= hit-index 2) (scatter-metal dx dy dz 1 0.3 0.3)
        (= hit-index 3) (scatter-lambertian 0.05 0.05 1)
        (else ; Ray flew off into the sky
          (v3-store* r g b SKY-COLOR)
          (set-hit-color (Vec3 r g b))
          (stop-this-script)))
      (v3-store x y z hit.pos)
      (v3-store dx dy dz scattered.dir)
      (v3-store* r g b scattered.color)
    ; Ran out of iterations without finding a light source
    (set-hit-color (Vec3 0 0 0)))))
